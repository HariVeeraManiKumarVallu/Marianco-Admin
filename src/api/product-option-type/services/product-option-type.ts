// @ts-nocheck/**  * product-option-type service  */  import { factories } from '@strapi/strapi'; import { PrintifyOption } from '../../../../types/printify';  export default factories.createCoreService('api::product-option-type.product-option-type', ({ strapi }) => ({ 	async getOptionTypes(options: PrintifyOption[]) {  		const optionTypesInDb = await strapi.documents('api::product-option-type.product-option-type').findMany({ 			filters: { 				type: { 					$in: options.map(o => o.type), 				}, 			}, 			fields: 'type', 		})  		const optionTypesNotInDb = options.filter(o => !optionTypesInDb.some(type => type.type === o.type))  		if (optionTypesNotInDb.length === 0) { 			return optionTypesInDb 		} 		const newOptionTypes = await Promise.all( 			optionTypesNotInDb.map(option => strapi.documents('api::product-option-type.product-option-type').create({ 				data: { 					type: option.type, 					name: option.name 				}, 				fields: 'type' 			})) 		)  		return [...optionTypesInDb, ...newOptionTypes] 	} }));
